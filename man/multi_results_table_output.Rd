% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_results_table_output.R
\name{multi_results_table_output}
\alias{multi_results_table_output}
\title{Generate multi-group results tables, save per-group files and optionally aggregate}
\usage{
multi_results_table_output(
  data = NULL,
  weights = TRUE,
  weights_col = "weights",
  loa,
  strata = "sampling_framework",
  sm_seperator = ".",
  questions,
  choices,
  label_column = "label::english",
  use_labels = TRUE,
  out_dir = "results_tables",
  file_prefix = "Desc_Table",
  value_columns = c("stat", "stat_upp", "stat_low", "n"),
  overwrite = TRUE,
  aggregate = TRUE,
  agg_filename = NULL
)
}
\arguments{
\item{data}{A data.frame (or tibble) containing the cleaned survey dataset. Must contain the strata and weights columns
referenced by \code{strata} and \code{weights_col}.}

\item{weights}{Logical, whether to use weights. If \code{TRUE} the column named by \code{weights_col} will be used.}

\item{weights_col}{Character, name of the weights column in \code{data} (default: "weights").}

\item{loa}{Data.frame describing the list of analyses (LOA). Must include \code{group_var}, \code{analysis_var}, and \code{analysis_type}.}

\item{strata}{Character, name of the strata column to pass into \code{srvyr::as_survey_design()} (default: "sampling_framework").}

\item{sm_seperator}{Character of the select-multiple separator used by your dataset (default: ".").}

\item{questions}{The survey \code{survey} sheet (Kobo-style) used to create the label dictionary.}

\item{choices}{The survey \code{choices} sheet (Kobo-style) used to create the label dictionary.}

\item{label_column}{Character. The label column in the Kobo sheet to use (default: "label::english").}

\item{use_labels}{Binary for whether the results table should be made using labels or the raw names}

\item{out_dir}{Character. Directory to write per-group files into (created if missing).}

\item{file_prefix}{Character. Prefix used when naming per-group files (default: "Desc_Table").}

\item{value_columns}{Character vector. Columns to write from the presentresults table (default: c("stat","stat_upp","stat_low","n")).}

\item{overwrite}{Logical. Whether to overwrite existing per-group files and aggregated workbook.}

\item{aggregate}{Logical. Whether to create an aggregated workbook collecting all successful per-group sheets.}

\item{agg_filename}{Optional filename for the aggregated workbook. If \code{NULL}, a sensible default is used.}
}
\value{
A list with elements:
\itemize{
\item \code{results}: named list of per-group result objects (one element per \code{loa$group_var}),
\item \code{summary}: a tibble summarising success/write status and any errors,
\item \code{aggregated_path}: character file path of the aggregated workbook, or \code{NULL} if not created.
}
}
\description{
Run an analysistools/presentresults pipeline for each group specified in \code{loa} (the LOA table),
write per-group XLSX result files, and optionally aggregate the per-group sheets into a single workbook.
}
\details{
This function mirrors the pipeline used interactively in the user's scripts. It:
\itemize{
\item iterates over distinct \code{loa$group_var} values (excluding \code{NA}),
\item for each group creates a \code{loa_g} (including overall rows),
\item runs \code{analysistools::create_analysis()} on a \code{srvyr} survey design,
\item labels results using \code{presentresults}, builds a table with \code{presentresults::create_table_variable_x_group},
\item writes a per-group XLSX file with \code{presentresults::create_xlsx_variable_x_group()} (with a robust fallback),
\item returns a named list of per-group results and a summary tibble.
}

The function uses a robust write strategy: it first attempts to let
\code{presentresults::create_xlsx_variable_x_group()} write the per-group workbook. If
that does not create a file, it will try to save any returned \code{openxlsx::Workbook} object
or fall back to creating a workbook and writing the table directly.
}
\examples{
\dontrun{
out <- multi_results_table_output(
  data = agg_data_weighted,
  weights = TRUE,
  weights_col = "weights",
  loa = loa,
  strata = "sampling_framework",
  sm_seperator = ".",
  questions = survey,
  choices = choices,
  out_dir = "results_tables",
  file_prefix = "HOVA_Aggregated_Desc_Table",
  overwrite = TRUE,
  aggregate = TRUE
)
}
}
