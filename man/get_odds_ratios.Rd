% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_odds_ratio.R
\name{get_odds_ratios}
\alias{get_odds_ratios}
\title{Calculate Odds Ratios Between a Binary Outcome and Multiple Grouping Variables}
\usage{
get_odds_ratios(df, question, group_vars_refs)
}
\arguments{
\item{df}{A data frame containing the variables of interest.}

\item{question}{A character string giving the name of the binary outcome variable.
This variable should be coded as 0/1, TRUE/FALSE, or a binary factor.}

\item{group_vars_refs}{A named list specifying grouping variables and their
corresponding reference levels. For example:
\code{list(governorate = "deir_al_balah", sampling_framework = "a_makeshift_site")}.}
}
\value{
A tibble with one row per non-reference level per model, containing:
\itemize{
\item \code{question} - the outcome variable name
\item \code{group_var} - the grouping variable name
\item \code{ref_group} - the reference category used
\item \code{term} - the level being compared
\item \code{estimate} - the odds ratio
\item \code{conf.low}, \code{conf.high} - 95\\% confidence interval bounds
\item \code{p.value} - p-value for the contrast
}
}
\description{
Fits logistic regression models between a single binary outcome variable
(e.g. a survey indicator) and one or more categorical grouping variables.
Each model uses one grouping variable at a time, with the user specifying
the reference category for each grouping variable.

The function returns tidy odds ratios, confidence intervals, and p-values.
}
\details{
The function loops through each grouping variable, fitting a simple logistic regression
model of the form \eqn{outcome ~ group}. The odds ratios are exponentiated model
coefficients with 95\\% confidence intervals.

Grouping variables with only one unique non-missing level are skipped.
The same applies if the outcome variable is not binary.
}
\examples{
\dontrun{
group_vars_refs <- list(
  governorate = "deir_al_balah",
  sampling_framework = "a_makeshift_site"
)

results <- get_odds_ratios_single(
  df = model_data,
  question = "morbidity_04",
  group_vars_refs = group_vars_refs
)
}

}
